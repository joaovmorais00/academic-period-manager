// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id         String       @id @default(uuid())
  createdAt  DateTime     @default(now())
  updatedAt  DateTime     @updatedAt
  name       String
  email      String       @unique
  password   String
  isAdmin    Boolean      @default(false)
  Activity   Activity[]
  Subject    Subject[]
  Assessment Assessment[]
}

model Activity {
  id              String   @id @default(uuid())
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
  createdBy       User     @relation(fields: [createdByUserId], references: [id])
  createdByUserId String
  name            String?
  startDateTime   DateTime
  endDateTime     DateTime
  dayOfWeek       Int
  Subject         Subject? @relation(fields: [subjectId], references: [id])
  subjectId       String?
}

model Subject {
  id              String       @id @default(uuid())
  createdAt       DateTime     @default(now())
  updatedAt       DateTime     @updatedAt
  createdBy       User         @relation(fields: [createdByUserId], references: [id])
  createdByUserId String
  title           String
  teacher         String?
  description     String?
  assessments     Assessment[]
  classes         Activity[]
}

model Assessment {
  id              String   @id @default(uuid())
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
  createdBy       User     @relation(fields: [createdByUserId], references: [id])
  createdByUserId String
  topics          String
  startDateTime   DateTime
  endDateTime     DateTime
  worth           Int
  grade           Int?
  subject         Subject  @relation(fields: [subjectId], references: [id])
  subjectId       String   @unique
  typeAssessment  String
}
